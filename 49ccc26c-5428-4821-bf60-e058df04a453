<File>
  <BPM_details>
    <Details>
      <DirectiveID>49ccc26c-5428-4821-bf60-e058df04a453</DirectiveID>
      <Source>BO</Source>
      <BpMethodCode>Erp.Labor.Update</BpMethodCode>
      <Name>Labor - Validate Material</Name>
      <Order>70</Order>
      <IsEnabled>True</IsEnabled>
      <ReenterMax>1000</ReenterMax>
      <PreventDeadloops>False</PreventDeadloops>
      <VisibilityScope>0</VisibilityScope>
      <Company>HA</Company>
      <DirectiveGroup>Labor - Validate Material</DirectiveGroup>
      <IsUpToDate>True</IsUpToDate>
      <CGCCode />
      <Body><![CDATA[<?xml version="1.0" encoding="utf-16"?><DirectiveDefinition mc:Ignorable="p" AdditionalUsings="{x:Null}" Version="116" xmlns="clr-namespace:Ice.Lib.Bpm.Model;assembly=Ice.Lib.Bpm.Shared" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cm="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro" xmlns:icbb="clr-namespace:Ice.Contracts.BO.BpMethod;assembly=Ice.Contracts.BO.BpMethod" xmlns:ilbma="clr-namespace:Ice.Lib.Bpm.Model.Actions;assembly=Ice.Lib.Bpm.Shared" xmlns:ilbmc="clr-namespace:Ice.Lib.Bpm.Model.Conditions;assembly=Ice.Lib.Bpm.Shared" xmlns:iubd="clr-namespace:Ice.UI.Bpm.Designer;assembly=Ice.UI.Bpm.Designer" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:p="http://epicor.com/BpmDesigner/Ignorable" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"><DirectiveDefinition.AdditionalReferences><scg:List x:TypeArguments="icbb:ReferencesGroup" Capacity="0" /></DirectiveDefinition.AdditionalReferences><DirectiveDefinition.Nodes><x:Reference>__ReferenceID0</x:Reference><x:Reference>__ReferenceID1</x:Reference><x:Reference>__ReferenceID2</x:Reference><x:Reference>__ReferenceID3</x:Reference></DirectiveDefinition.Nodes><DirectiveDefinition.StartNode><DirectiveCondition False="{x:Null}" x:Name="__ReferenceID0" DisplayName="Condition 0" Id="edf780e7-56a9-40a3-bbec-f63039b6f44a"><DirectiveCondition.Condition><ConditionBlock><ConditionBlock.Items><ConditionBlockItem Postfix="{x:Null}" Prefix="{x:Null}" Operator="None"><ConditionBlockItem.Condition><ilbmc:FieldCondition VisualProperties="{x:Null}" Filter="Changed" Id="0" Operator="NotEqualsTo" ValidationState="Valid"><ilbmc:FieldCondition.Expression><ExpressionDefinition Text=""D""><ExpressionDefinition.TableParameters><scg:List x:TypeArguments="TableParameter" Capacity="0" /></ExpressionDefinition.TableParameters></ExpressionDefinition></ilbmc:FieldCondition.Expression><ilbmc:FieldCondition.Field><ColumnInfo ColumnName="RowMod" DataType="System.String" IsExtensionTable="False" IsUd="False" TableName="ttLaborDtl" TableRowTypeName="Erp.Tablesets.LaborDtlRow" /></ilbmc:FieldCondition.Field></ilbmc:FieldCondition></ConditionBlockItem.Condition></ConditionBlockItem></ConditionBlock.Items></ConditionBlock></DirectiveCondition.Condition><DirectiveCondition.True><DirectiveStep x:Name="__ReferenceID3" DisplayName="Execute Custom Code 2" Id="d0aacdc6-4346-4f46-a39d-a01268fa1718"><DirectiveStep.Action><ilbma:CustomCodeAction PrimaryTable="{x:Null}" Code="/*Check Material - when starting Assembly, check for under-issued material    L Knight 09-30-21*/

string processingDetails = string.Empty;
string path = @"\\hussv022\c$\Logs\";
string fileName = "Labor - Check Material_Log_" + Guid.NewGuid ().ToString () + ".txt";

processingDetails = processingDetails + "Starting Labor - Check Material.." + Environment.NewLine;





bool jobContainsM2Component = false;
Erp.Tables.JobHead JobHead;
Erp.Tables.JobOper JobOper;
Erp.Tables.JobMtl JobMtl;
Erp.Tables.Part Part;
//Ice.Diagnostics.Log.WriteEntry("IN IN IN");
var ttLaborDtl_xRow = (from ttLaborDtl_Row in ttLaborDtl
                       where ttLaborDtl_Row.Company == Session.CompanyID && 
                      (string.Equals(ttLaborDtl_Row.RowMod, IceRow.ROWSTATE_UPDATED, StringComparison.OrdinalIgnoreCase) || 
                       string.Equals(ttLaborDtl_Row.RowMod, IceRow.ROWSTATE_ADDED, StringComparison.OrdinalIgnoreCase))
                       select ttLaborDtl_Row).FirstOrDefault();

/*Get the current labour detail record*/
if (ttLaborDtl_xRow != null)
{



  //Only run the code for "End Activity"
  if (ttLaborDtl_xRow.EndActivity)
    {
  processingDetails = processingDetails + "ttLaborDtl.EndActivity.." + Environment.NewLine;
  
    //ttLaborDtl_xRow["CheckBox01"] = false;   -- Change to use temp file because Labordtl.Checkbox01 UD field did not convert from E9 to E10
    callContextBpmData["CheckBox01"] = false;        
    ttLaborDtl_xRow["Character03"] = "";
    bool checkIt = true;
    bool hasLaterOps = false;
    /* Check to see if it is for SUW */
    JobHead = (from JobHead_Row in Db.JobHead
               where JobHead_Row.Company == Session.CompanyID &&
               string.Compare(JobHead_Row.JobNum, ttLaborDtl_xRow.JobNum, true) == 0
               select JobHead_Row).FirstOrDefault();

    if (JobHead != null)
    {
    
    processingDetails = processingDetails + "JobHead.Plant = " + JobHead.Plant + Environment.NewLine;
        if (string.Compare(JobHead.Plant, "SUW", true) != 0)
        {
            checkIt = false; 

        }
                        processingDetails = processingDetails + "checkIt = " + checkIt  + Environment.NewLine;
    }


    JobOper = (from JobOper_Row in Db.JobOper
               where JobOper_Row.Company == Session.CompanyID &&
               string.Compare(JobOper_Row.JobNum, ttLaborDtl_xRow.JobNum, true) == 0 &&
               JobOper_Row.OprSeq == ttLaborDtl_xRow.OprSeq
               select JobOper_Row).FirstOrDefault();

      //Only check material on OPCODE S0900 - Pulling
    if (JobOper != null)
    {
            processingDetails = processingDetails + "JobOper.OprSeq = " + JobOper.OprSeq + Environment.NewLine;        
            processingDetails = processingDetails + "ttLaborDtl_xRow.OprSeq = " + ttLaborDtl_xRow.OprSeq + Environment.NewLine;
    
        processingDetails = processingDetails + "JobOper.OpCode = " + JobOper.OpCode + Environment.NewLine;
        
        
            if (JobOper.OpCode != "S0900")
        {
            checkIt = false; 

        }
                    processingDetails = processingDetails + "checkIt = " + checkIt  + Environment.NewLine;
    }  //if JobOper
    
    /* We use checkIt to determine if we should do the check or not */
                    processingDetails = processingDetails + "If checkIt = " + checkIt  + Environment.NewLine;
    if (checkIt)
    {
//Ice.Diagnostics.Log.WriteEntry("In CheckIt");
  
           
                    processingDetails = processingDetails + "Next - read JobMtl.  JobHead.Number08 =  " + JobHead.Number08  + Environment.NewLine;       
            
            foreach (var JobMtl_iterator in (from JobMtl_Row in Db.JobMtl
                                             where JobMtl_Row.Company == Session.CompanyID &&
                                             string.Compare(JobMtl_Row.JobNum, ttLaborDtl_xRow.JobNum, true) == 0 &&
                                             //JobMtl_Row.AssemblySeq == JobOper.AssemblySeq &&
                                             //JobMtl_Row.RelatedOperation == JobOper.OprSeq &&
                                             string.Compare(JobMtl_Row.Plant, "SUW", true) == 0
                                             select JobMtl_Row))
            {
                JobMtl = JobMtl_iterator;

                processingDetails = processingDetails + "JobMtl.PartNum = " + JobMtl.PartNum + "JobMtl.RelatedOperation = " + JobMtl.RelatedOperation + "JobMtl.IssuedQty = " + JobMtl.IssuedQty + Environment.NewLine;
                processingDetails = processingDetails + "JobMtl.PartNum = " + JobMtl.PartNum + "JobMtl.RelatedOperation = " + JobMtl.RelatedOperation + "JobMtl.QtyPer = " + JobMtl.QtyPer + Environment.NewLine;
                
                /*Check if material has been under issued*/
                if (JobMtl.IssuedQty < JobMtl.QtyPer)
                {
                    /*labor detail start activity is true*/
                    if (ttLaborDtl_xRow.EndActivity == true)
                    {
                           // ttLaborDtl_xRow["CheckBox01"] = true;   -- Change to use temp file because Labordtl.Checkbox01 UD field did not convert from E9 to E10
                            callContextBpmData["CheckBox01"] = true;
                            //ttLaborDtl_xRow["Character03"] = ttLaborDtl_xRow["Character03"] + "Material was under-issued at previous Operation (" + System.Convert.ToString(JobMtl.RelatedOperation) + "). Cannot allow start of Activity" + Environment.NewLine;
                    }

                }/*end: if JobMtl.IssuedQty < Required qty*/
            }/*end: for each JobMtl*/

      } // checkit
        } //LaborDtl.StartActivity
        

System.IO.File.AppendAllText (path + fileName, processingDetails); 

} //ttlabordtl
" ExecutionRule="OnceForAllMatching" Id="0" IsAsync="False" RecordMode="Nothing" TerminateOnError="False" ValidationState="Valid" /></DirectiveStep.Action><DirectiveStep.Next><DirectiveCondition False="{x:Null}" x:Name="__ReferenceID1" DisplayName="Condition 1" Id="3b611cba-4fb4-4b2b-b06a-4bdef428c4e8"><DirectiveCondition.Condition><ConditionBlock><ConditionBlock.Items><ConditionBlockItem Postfix="{x:Null}" Prefix="{x:Null}" Operator="None"><ConditionBlockItem.Condition><ilbmc:CallContextFieldCondition VisualProperties="{x:Null}" Id="0" Operator="EqualsTo" ValidationState="Valid"><ilbmc:CallContextFieldCondition.Expression><ExpressionDefinition Text="true"><ExpressionDefinition.TableParameters><scg:List x:TypeArguments="TableParameter" Capacity="0" /></ExpressionDefinition.TableParameters></ExpressionDefinition></ilbmc:CallContextFieldCondition.Expression><ilbmc:CallContextFieldCondition.Field><ColumnInfo ColumnName="Checkbox01" DataType="System.Boolean" IsExtensionTable="False" IsUd="False" TableName="callContextBpmData" TableRowTypeName="" /></ilbmc:CallContextFieldCondition.Field></ilbmc:CallContextFieldCondition></ConditionBlockItem.Condition></ConditionBlockItem></ConditionBlock.Items></ConditionBlock></DirectiveCondition.Condition><DirectiveCondition.True><DirectiveStep Next="{x:Null}" x:Name="__ReferenceID2" DisplayName="Raise Exception 0" Id="9e0ececb-3215-483f-9a90-02caac3c3a30"><DirectiveStep.Action><ilbma:RaiseExceptionAction PrimaryTable="{x:Null}" ExecutionRule="OnceForAllMatching" Id="0" MessageType="Error" Name="Under-Issued Material Error" TerminateOnError="True" ValidationState="Valid"><ilbma:RaiseExceptionAction.StructuredText><StructuredMessage><StructuredMessage.Items><x:String xml:space="preserve">Material is Under-Issued for this job.

Cannot end  this Activity.</x:String></StructuredMessage.Items></StructuredMessage></ilbma:RaiseExceptionAction.StructuredText></ilbma:RaiseExceptionAction></DirectiveStep.Action><DirectiveStep.VisualProperties><p:VisualPropertiesStorage><x:Double x:Key="ElementX">295</x:Double><x:Double x:Key="ElementY">327</x:Double><iubd:TextNote Text="{x:Null}" x:Key="Note" Background="Yellow" IsExpanded="False" IsNotifying="True" X="0" Y="0" /></p:VisualPropertiesStorage></DirectiveStep.VisualProperties></DirectiveStep></DirectiveCondition.True><DirectiveCondition.VisualProperties><p:VisualPropertiesStorage><x:Double x:Key="ElementX">475</x:Double><x:Double x:Key="ElementY">324</x:Double><iubd:TextNote Text="{x:Null}" x:Key="Note" Background="Yellow" IsExpanded="False" IsNotifying="True" X="0" Y="0" /><iubd:LinkProperties x:Key="TrueExitLink" DestinationConnectorId="11" SourceConnectorId="7"><iubd:LinkProperties.Points><cm:BindableCollection x:TypeArguments="av:Point" IsNotifying="True"><av:Point>475,369</av:Point><av:Point>415,392</av:Point></cm:BindableCollection></iubd:LinkProperties.Points></iubd:LinkProperties></p:VisualPropertiesStorage></DirectiveCondition.VisualProperties></DirectiveCondition></DirectiveStep.Next><DirectiveStep.VisualProperties><p:VisualPropertiesStorage><x:Double x:Key="ElementX">505</x:Double><x:Double x:Key="ElementY">187</x:Double><iubd:TextNote Text="{x:Null}" x:Key="Note" Background="Yellow" IsExpanded="False" IsNotifying="True" X="0" Y="0" /><iubd:LinkProperties x:Key="ExitLink" DestinationConnectorId="1" SourceConnectorId="4"><iubd:LinkProperties.Points><cm:BindableCollection x:TypeArguments="av:Point" IsNotifying="True"><av:Point>565,277</av:Point><av:Point>535,324</av:Point></cm:BindableCollection></iubd:LinkProperties.Points></iubd:LinkProperties></p:VisualPropertiesStorage></DirectiveStep.VisualProperties></DirectiveStep></DirectiveCondition.True><DirectiveCondition.VisualProperties><p:VisualPropertiesStorage><x:Double x:Key="ElementX">732</x:Double><x:Double x:Key="ElementY">187</x:Double><iubd:TextNote Text="{x:Null}" x:Key="Note" Background="Yellow" IsExpanded="False" IsNotifying="True" X="0" Y="0" /><iubd:LinkProperties x:Key="TrueExitLink" DestinationConnectorId="10" SourceConnectorId="7"><iubd:LinkProperties.Points><cm:BindableCollection x:TypeArguments="av:Point" IsNotifying="True"><av:Point>732,232</av:Point><av:Point>625,232</av:Point></cm:BindableCollection></iubd:LinkProperties.Points></iubd:LinkProperties></p:VisualPropertiesStorage></DirectiveCondition.VisualProperties></DirectiveCondition></DirectiveDefinition.StartNode><DirectiveDefinition.Variables><scg:List x:TypeArguments="DirectiveVariable" Capacity="0" /></DirectiveDefinition.Variables><DirectiveDefinition.VisualProperties><p:VisualPropertiesStorage><x:Int32 x:Key="Ice.UI.Bpm.Widgets.CallBpmDataFormViewModelInstanceCounter">0</x:Int32><x:Int32 x:Key="Ice.UI.Bpm.Widgets.CallScWorkflowViewModelInstanceCounter">0</x:Int32><x:Int32 x:Key="Ice.UI.Bpm.Widgets.CustomCodeActionViewModelInstanceCounter">3</x:Int32><x:Int32 x:Key="Ice.UI.Bpm.Widgets.AttachDataTagViewModelInstanceCounter">0</x:Int32><x:Int32 x:Key="Ice.UI.Bpm.Widgets.RemoveDataTagViewModelInstanceCounter">0</x:Int32><x:Int32 x:Key="Ice.UI.Bpm.Widgets.ConditionViewModelInstanceCounter">2</x:Int32><x:Int32 x:Key="Ice.UI.Bpm.Widgets.EnablePostProcessingViewModelInstanceCounter">1</x:Int32><x:Int32 x:Key="Ice.UI.Bpm.Widgets.AttachHoldViewModelInstanceCounter">0</x:Int32><x:Int32 x:Key="Ice.UI.Bpm.Widgets.RemoveHoldsViewModelInstanceCounter">0</x:Int32><x:Int32 x:Key="Ice.UI.Bpm.Widgets.InvokeBOMethodViewModelInstanceCounter">0</x:Int32><x:Int32 x:Key="Ice.UI.Bpm.Widgets.InvokeEpicorFunctionViewModelInstanceCounter">0</x:Int32><x:Int32 x:Key="Ice.UI.Bpm.Widgets.InvokeNetMethodViewModelInstanceCounter">0</x:Int32><x:Int32 x:Key="Ice.UI.Bpm.Widgets.NotificationViewModelInstanceCounter">0</x:Int32><x:Int32 x:Key="Ice.UI.Bpm.Widgets.FillTableByQueryViewModelInstanceCounter">0</x:Int32><x:Int32 x:Key="Ice.UI.Bpm.Widgets.UpdateTableByQueryViewModelInstanceCounter">0</x:Int32><x:Int32 x:Key="Ice.UI.Bpm.Widgets.RaiseExceptionViewModelInstanceCounter">1</x:Int32><x:Int32 x:Key="Ice.UI.Bpm.Widgets.SendMailViewModelInstanceCounter">0</x:Int32><x:Int32 x:Key="Ice.UI.Bpm.Widgets.SetArgumentViewModelInstanceCounter">0</x:Int32><x:Int32 x:Key="Ice.UI.Bpm.Widgets.SetBpmDataFieldViewModelInstanceCounter">0</x:Int32><x:Int32 x:Key="Ice.UI.Bpm.Widgets.SetByQueryViewModelInstanceCounter">0</x:Int32><x:Int32 x:Key="Ice.UI.Bpm.Widgets.SetFieldViewModelInstanceCounter">0</x:Int32><x:Int32 x:Key="Ice.UI.Bpm.Widgets.ShowMessageViewModelInstanceCounter">1</x:Int32><x:Double x:Key="ElementX">724</x:Double><x:Double x:Key="ElementY">30</x:Double><iubd:TextNote Text="{x:Null}" x:Key="Note" Background="Yellow" IsExpanded="False" IsNotifying="True" X="0" Y="0" /><iubd:LinkProperties x:Key="ExitLink" DestinationConnectorId="1" SourceConnectorId="4"><iubd:LinkProperties.Points><cm:BindableCollection x:TypeArguments="av:Point" IsNotifying="True"><av:Point>784,120</av:Point><av:Point>792,187</av:Point></cm:BindableCollection></iubd:LinkProperties.Points></iubd:LinkProperties></p:VisualPropertiesStorage></DirectiveDefinition.VisualProperties></DirectiveDefinition>]]></Body>
      <SysRevID>System.Byte[]</SysRevID>
      <SysRowID>3f35cbf9-aca4-4969-ada6-2751738ddb16</SysRowID>
    </Details>
  </BPM_details>
</File>