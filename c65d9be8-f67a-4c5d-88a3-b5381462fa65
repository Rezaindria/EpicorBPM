<File>
  <BPM_details>
    <Details>
      <DirectiveID>c65d9be8-f67a-4c5d-88a3-b5381462fa65</DirectiveID>
      <Source>DB</Source>
      <BpMethodCode>Erp.OrderDtl.Update</BpMethodCode>
      <Name>210408_UpdatePartCosts</Name>
      <Order>40</Order>
      <IsEnabled>True</IsEnabled>
      <ReenterMax>1000</ReenterMax>
      <PreventDeadloops>False</PreventDeadloops>
      <VisibilityScope>1</VisibilityScope>
      <Company>HA</Company>
      <DirectiveGroup>ESI_MultiCompany_PartCosts-DD</DirectiveGroup>
      <IsUpToDate>True</IsUpToDate>
      <CGCCode />
      <Body><![CDATA[<?xml version="1.0" encoding="utf-16"?><DirectiveDefinition mc:Ignorable="p" AdditionalUsings="
using Ice.Assemblies;" Version="116" xmlns="clr-namespace:Ice.Lib.Bpm.Model;assembly=Ice.Lib.Bpm.Shared" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cm="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro" xmlns:icbb="clr-namespace:Ice.Contracts.BO.BpMethod;assembly=Ice.Contracts.BO.BpMethod" xmlns:ilbma="clr-namespace:Ice.Lib.Bpm.Model.Actions;assembly=Ice.Lib.Bpm.Shared" xmlns:ilbmc="clr-namespace:Ice.Lib.Bpm.Model.Conditions;assembly=Ice.Lib.Bpm.Shared" xmlns:iubd="clr-namespace:Ice.UI.Bpm.Designer;assembly=Ice.UI.Bpm.Designer" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:p="http://epicor.com/BpmDesigner/Ignorable" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"><DirectiveDefinition.AdditionalReferences><scg:List x:TypeArguments="icbb:ReferencesGroup" Capacity="4"><icbb:ReferencesGroup IsEditable="True" IsStandard="False" Name="Assemblies"><icbb:ReferencesGroup.References><icbb:ReferenceInfo x:Key="Ice.Contracts.BO.UserCodes" FileName="Ice.Contracts.BO.UserCodes.dll" Name="Ice.Contracts.BO.UserCodes" Version="3.2.500.0" /></icbb:ReferencesGroup.References></icbb:ReferencesGroup><icbb:ReferencesGroup IsEditable="True" IsStandard="False" Name="Externals"><icbb:ReferencesGroup.References><scg:Dictionary x:TypeArguments="x:String, icbb:ReferenceInfo" /></icbb:ReferencesGroup.References></icbb:ReferencesGroup></scg:List></DirectiveDefinition.AdditionalReferences><DirectiveDefinition.Nodes><x:Reference>__ReferenceID0</x:Reference><x:Reference>__ReferenceID1</x:Reference></DirectiveDefinition.Nodes><DirectiveDefinition.StartNode><DirectiveCondition False="{x:Null}" x:Name="__ReferenceID1" DisplayName="Condition 0" Id="db50987d-3a04-4b4b-941f-4fda4430f355"><DirectiveCondition.Condition><ConditionBlock><ConditionBlock.Items><ConditionBlockItem Postfix="{x:Null}" Operator="None" Prefix=""><ConditionBlockItem.Condition><ilbmc:FieldChangedCondition FromValue="{x:Null}" VisualProperties="{x:Null}" Id="0" ToValue="true" ValidationState="Valid"><ilbmc:FieldChangedCondition.Field><ColumnInfo ColumnName="CheckBox01" DataType="System.Boolean" IsExtensionTable="False" IsUd="False" TableName="ttOrderDtl" TableRowTypeName="Erp.Bpm.TempTables.OrderDtlTempRow" /></ilbmc:FieldChangedCondition.Field></ilbmc:FieldChangedCondition></ConditionBlockItem.Condition></ConditionBlockItem><ConditionBlockItem Operator="And" Postfix="" Prefix="("><ConditionBlockItem.Condition><ilbmc:FieldCondition VisualProperties="{x:Null}" Filter="Changed" Id="0" Operator="EqualsTo" ValidationState="Valid"><ilbmc:FieldCondition.Expression><ExpressionDefinition Text=""SB""><ExpressionDefinition.TableParameters><scg:List x:TypeArguments="TableParameter" Capacity="0" /></ExpressionDefinition.TableParameters></ExpressionDefinition></ilbmc:FieldCondition.Expression><ilbmc:FieldCondition.Field><ColumnInfo ColumnName="BasePartNum" DataType="System.String" IsExtensionTable="False" IsUd="False" TableName="ttOrderDtl" TableRowTypeName="Erp.Bpm.TempTables.OrderDtlTempRow" /></ilbmc:FieldCondition.Field></ilbmc:FieldCondition></ConditionBlockItem.Condition></ConditionBlockItem><ConditionBlockItem Prefix="{x:Null}" Operator="And" Postfix=")"><ConditionBlockItem.Condition><ilbmc:FieldCondition VisualProperties="{x:Null}" Filter="Changed" Id="0" Operator="NotEqualsTo" ValidationState="Valid"><ilbmc:FieldCondition.Expression><ExpressionDefinition Text=""SB""><ExpressionDefinition.TableParameters><scg:List x:TypeArguments="TableParameter" Capacity="0" /></ExpressionDefinition.TableParameters></ExpressionDefinition></ilbmc:FieldCondition.Expression><ilbmc:FieldCondition.Field><ColumnInfo ColumnName="PartNum" DataType="System.String" IsExtensionTable="False" IsUd="False" TableName="ttOrderDtl" TableRowTypeName="Erp.Bpm.TempTables.OrderDtlTempRow" /></ilbmc:FieldCondition.Field></ilbmc:FieldCondition></ConditionBlockItem.Condition></ConditionBlockItem></ConditionBlock.Items></ConditionBlock></DirectiveCondition.Condition><DirectiveCondition.True><DirectiveStep Next="{x:Null}" x:Name="__ReferenceID0" DisplayName="Execute Custom Code 0" Id="24502562-0e8c-444c-b528-96b2d8e81287"><DirectiveStep.Action><ilbma:CustomCodeAction PrimaryTable="{x:Null}" Code="// The purpose of this directive is to invoke the process that creates a new part in a different company after it has been configured in the HA company.


try {

      // this.PublishInfoMessage("Firing data directive to update part costs", Ice.Common.BusinessObjectMessageType.Information, Ice.Bpm.InfoMessageDisplayMode.Individual, "FirstVar","SecondVar");
      

      var orderDtlRow = (from x in ttOrderDtl
                         where x.Company == Session.CompanyID &&
                               (x.RowMod == "U" || x.RowMod == "A")
                         select x).FirstOrDefault();
                          

      if (orderDtlRow != null)
         {
           
         if (orderDtlRow.CheckBox02 != true)
         {
        
          //  Find a part cost record for the HA Company
      
          var partCostRow = (from x in Db.PartCost where
                                  x.Company == Session.CompanyID &&
                                  x.PartNum == orderDtlRow.PartNum &&
                                  x.StdMaterialCost == 0
                                  select x).FirstOrDefault();
                                  
          if (partCostRow != null)
          {
              partCostRow.StdMaterialCost = orderDtlRow.Number23;
              Db.Validate();
              Db.SaveChanges();
          
          }
              
              
          //. this.PublishInfoMessage("Finished updating local part cost", Ice.Common.BusinessObjectMessageType.Information, Ice.Bpm.InfoMessageDisplayMode.Individual, "FirstVar","SecondVar");

       
          Erp.ErpContext Db2 = new Erp.ErpContext(); 
          using (var txScope2 = Erp.ErpContext.CreateDefaultTransactionScope())
            {
                 var partCostRowHAP = (from x in Db2.PartCost where
                                  x.Company == "HAP" &&
                                  x.PartNum == orderDtlRow.PartNum &&
                                  x.StdMaterialCost == 0 &&
                                  x.StdLaborCost == 0 &&
                                  x.StdBurdenCost == 0
                                  select x).FirstOrDefault();
                                  
                if (partCostRowHAP != null)
                {
                    partCostRowHAP.StdMaterialCost = orderDtlRow.Number11;
                    partCostRowHAP.StdLaborCost = orderDtlRow.Number21;
                    partCostRowHAP.StdBurdenCost = orderDtlRow.Number26;
                    
                    Db2.Validate();
                    Db2.SaveChanges();
                
                }
              
              txScope2.Complete();
            }
        
         // this.PublishInfoMessage("Finished updating HAP part cost", Ice.Common.BusinessObjectMessageType.Information, Ice.Bpm.InfoMessageDisplayMode.Individual, "FirstVar","SecondVar");
         
         // Check to see if there is an existing vendor part reord....
         using (var txScope = Erp.ErpContext.CreateDefaultTransactionScope())
          {
              var vendPartHA = (from x in Db.VendPart where
                                     x.Company == "HA" &&
                                     x.PartNum == orderDtlRow.PartNum
                                     select x).FirstOrDefault();
              if (vendPartHA == null)
              {
                         VendPart newRow = new VendPart();
                         Db.VendPart.Insert(newRow);
                         newRow.Company = "HA";
                         newRow.PartNum = orderDtlRow.PartNum;
                         newRow.PUM = "EA";
                         newRow.EffectiveDate = DateTime.Today;
                         newRow.VendorNum = 4692; 
                         newRow.BaseUnitPrice = orderDtlRow.Number23;
                         newRow.PartDescription = "SB Configured Belt"; 
                         newRow.CurrencyCode = "USD"; 

                         
                         Db.Validate();
                         Db.SaveChanges();
              
                  // Create a new VendPart
              }
                txScope.Complete();    
          }
        }
   
    orderDtlRow.CheckBox01 = false;
    orderDtlRow.CheckBox02 = false;
          
    }

}
catch {}
" ExecutionRule="OnceForAllMatching" Id="0" IsAsync="False" RecordMode="Nothing" TerminateOnError="False" ValidationState="Valid" /></DirectiveStep.Action><DirectiveStep.VisualProperties><p:VisualPropertiesStorage><x:Double x:Key="ElementX">370.00000000000011</x:Double><x:Double x:Key="ElementY">423</x:Double><iubd:TextNote Text="{x:Null}" x:Key="Note" Background="Yellow" IsExpanded="False" IsNotifying="True" X="0" Y="0" /></p:VisualPropertiesStorage></DirectiveStep.VisualProperties></DirectiveStep></DirectiveCondition.True><DirectiveCondition.VisualProperties><p:VisualPropertiesStorage><x:Double x:Key="ElementX">420</x:Double><x:Double x:Key="ElementY">68</x:Double><iubd:TextNote Text="{x:Null}" x:Key="Note" Background="Yellow" IsExpanded="False" IsNotifying="True" X="0" Y="0" /><iubd:LinkProperties x:Key="TrueExitLink" DestinationConnectorId="1" SourceConnectorId="7"><iubd:LinkProperties.Points><cm:BindableCollection x:TypeArguments="av:Point" IsNotifying="True"><av:Point>420,113</av:Point><av:Point>430,423</av:Point></cm:BindableCollection></iubd:LinkProperties.Points></iubd:LinkProperties></p:VisualPropertiesStorage></DirectiveCondition.VisualProperties></DirectiveCondition></DirectiveDefinition.StartNode><DirectiveDefinition.Variables><scg:List x:TypeArguments="DirectiveVariable" Capacity="4"><DirectiveVariable Initializer="{x:Null}" Name="newPartNumber"><DirectiveVariable.Type><icbb:TypeDescription Assembly="mscorlib" IsMultirow="False" Name="String" Namespace="System" WellknownType="Unknown" /></DirectiveVariable.Type></DirectiveVariable></scg:List></DirectiveDefinition.Variables><DirectiveDefinition.VisualProperties><p:VisualPropertiesStorage><x:Int32 x:Key="Ice.UI.Bpm.Widgets.BAMAutoPrintViewModelInstanceCounter">0</x:Int32><x:Int32 x:Key="Ice.UI.Bpm.Widgets.CallScWorkflowViewModelInstanceCounter">0</x:Int32><x:Int32 x:Key="Ice.UI.Bpm.Widgets.CustomCodeActionViewModelInstanceCounter">1</x:Int32><x:Int32 x:Key="Ice.UI.Bpm.Widgets.AttachDataTagViewModelInstanceCounter">0</x:Int32><x:Int32 x:Key="Ice.UI.Bpm.Widgets.RemoveDataTagViewModelInstanceCounter">0</x:Int32><x:Int32 x:Key="Ice.UI.Bpm.Widgets.ConditionViewModelInstanceCounter">0</x:Int32><x:Int32 x:Key="Ice.UI.Bpm.Widgets.InvokeBOMethodViewModelInstanceCounter">0</x:Int32><x:Int32 x:Key="Ice.UI.Bpm.Widgets.InvokeEpicorFunctionViewModelInstanceCounter">0</x:Int32><x:Int32 x:Key="Ice.UI.Bpm.Widgets.InvokeNetMethodViewModelInstanceCounter">0</x:Int32><x:Int32 x:Key="Ice.UI.Bpm.Widgets.NotificationViewModelInstanceCounter">0</x:Int32><x:Int32 x:Key="Ice.UI.Bpm.Widgets.FillTableByQueryViewModelInstanceCounter">0</x:Int32><x:Int32 x:Key="Ice.UI.Bpm.Widgets.UpdateTableByQueryViewModelInstanceCounter">0</x:Int32><x:Int32 x:Key="Ice.UI.Bpm.Widgets.SendMailViewModelInstanceCounter">0</x:Int32><x:Int32 x:Key="Ice.UI.Bpm.Widgets.SetArgumentViewModelInstanceCounter">0</x:Int32><x:Int32 x:Key="Ice.UI.Bpm.Widgets.SetBpmDataFieldViewModelInstanceCounter">2</x:Int32><x:Double x:Key="ElementX">10</x:Double><x:Double x:Key="ElementY">10</x:Double><iubd:TextNote Text="{x:Null}" x:Key="Note" Background="Yellow" IsExpanded="False" IsNotifying="True" X="0" Y="0" /><iubd:LinkProperties x:Key="ExitLink" DestinationConnectorId="1" SourceConnectorId="10"><iubd:LinkProperties.Points><cm:BindableCollection x:TypeArguments="av:Point" IsNotifying="True"><av:Point>130,55</av:Point><av:Point>480,68</av:Point></cm:BindableCollection></iubd:LinkProperties.Points></iubd:LinkProperties></p:VisualPropertiesStorage></DirectiveDefinition.VisualProperties></DirectiveDefinition>]]></Body>
      <SysRevID>System.Byte[]</SysRevID>
      <SysRowID>60f52774-ac40-4f5c-b010-3fc433d306f2</SysRowID>
    </Details>
  </BPM_details>
</File>