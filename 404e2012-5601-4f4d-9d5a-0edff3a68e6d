<File>
  <BPM_details>
    <Details>
      <DirectiveID>404e2012-5601-4f4d-9d5a-0edff3a68e6d</DirectiveID>
      <Source>DB</Source>
      <BpMethodCode>Ice.QueryHdr.Update</BpMethodCode>
      <Name>GitHub-BAQ</Name>
      <Order>10</Order>
      <IsEnabled>False</IsEnabled>
      <ReenterMax>1000</ReenterMax>
      <PreventDeadloops>False</PreventDeadloops>
      <VisibilityScope>0</VisibilityScope>
      <Company>HA</Company>
      <DirectiveGroup>GitHub1</DirectiveGroup>
      <IsUpToDate>True</IsUpToDate>
      <CGCCode />
      <Body>&lt;?xml version="1.0" encoding="utf-16"?&gt;&lt;DirectiveDefinition mc:Ignorable="p" AdditionalUsings="using System.Xml.Linq;&amp;#xA;using System.IO;&amp;#xA;using System.Text;" Version="116" xmlns="clr-namespace:Ice.Lib.Bpm.Model;assembly=Ice.Lib.Bpm.Shared" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cm="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro" xmlns:icbb="clr-namespace:Ice.Contracts.BO.BpMethod;assembly=Ice.Contracts.BO.BpMethod" xmlns:ilbma="clr-namespace:Ice.Lib.Bpm.Model.Actions;assembly=Ice.Lib.Bpm.Shared" xmlns:iubd="clr-namespace:Ice.UI.Bpm.Designer;assembly=Ice.UI.Bpm.Designer" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:p="http://epicor.com/BpmDesigner/Ignorable" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;DirectiveDefinition.AdditionalReferences&gt;&lt;scg:List x:TypeArguments="icbb:ReferencesGroup" Capacity="4"&gt;&lt;icbb:ReferencesGroup IsEditable="True" IsStandard="False" Name="Assemblies"&gt;&lt;icbb:ReferencesGroup.References&gt;&lt;scg:Dictionary x:TypeArguments="x:String, icbb:ReferenceInfo" /&gt;&lt;/icbb:ReferencesGroup.References&gt;&lt;/icbb:ReferencesGroup&gt;&lt;icbb:ReferencesGroup IsEditable="True" IsStandard="False" Name="Externals"&gt;&lt;icbb:ReferencesGroup.References&gt;&lt;icbb:ReferenceInfo x:Key="GitHubFileAccess" FileName="GitHubFileAccess.dll" Name="GitHubFileAccess" Version="1.0.0.4" /&gt;&lt;icbb:ReferenceInfo x:Key="Octokit" FileName="Octokit.dll" Name="Octokit" Version="0.50.0.0" /&gt;&lt;/icbb:ReferencesGroup.References&gt;&lt;/icbb:ReferencesGroup&gt;&lt;/scg:List&gt;&lt;/DirectiveDefinition.AdditionalReferences&gt;&lt;DirectiveDefinition.Nodes&gt;&lt;x:Reference&gt;__ReferenceID0&lt;/x:Reference&gt;&lt;/DirectiveDefinition.Nodes&gt;&lt;DirectiveDefinition.StartNode&gt;&lt;DirectiveStep Next="{x:Null}" x:Name="__ReferenceID0" DisplayName="Execute Custom Code 1" Id="d72d30f7-24a1-42e4-acf8-9c7ee123332f"&gt;&lt;DirectiveStep.Action&gt;&lt;ilbma:CustomCodeAction PrimaryTable="{x:Null}" Code="var v = ttQueryHdr.Where(x=&amp;gt; x.RowMod==&amp;quot;A&amp;quot; || x.RowMod == &amp;quot;U&amp;quot;).FirstOrDefault();&amp;#xA;if( v!= null )&amp;#xA;{&amp;#xA;&amp;#xA;  DataTable dtBaq = new DataTable();&amp;#xA;  dtBaq.Columns.Add(&amp;quot;Company&amp;quot;);&amp;#xA;  dtBaq.Columns.Add(&amp;quot;QueryID&amp;quot;);&amp;#xA;  dtBaq.Columns.Add(&amp;quot;AuthorID&amp;quot;);&amp;#xA;  dtBaq.Columns.Add(&amp;quot;Description&amp;quot;);&amp;#xA;  dtBaq.Columns.Add(&amp;quot;DisplayPhrase&amp;quot;);&amp;#xA;  dtBaq.Columns.Add(&amp;quot;IsGlobal&amp;quot;);&amp;#xA;  dtBaq.Columns.Add(&amp;quot;IsShared&amp;quot;);&amp;#xA;  dtBaq.Columns.Add(&amp;quot;Updatable&amp;quot;);&amp;#xA;  dtBaq.Columns.Add(&amp;quot;SysRevID&amp;quot;);&amp;#xA;   dtBaq.Columns.Add(&amp;quot;SysRowID&amp;quot;);&amp;#xA;  dtBaq.Rows.Add(v.Company,v.QueryID,v.AuthorID,v.Description,v.DisplayPhrase,v.IsGlobal,v.IsShared,v.Updatable,v.SysRevID,v.SysRowID);&amp;#xA;  &amp;#xA;foreach(DataRow row in dtBaq.Rows)&amp;#xA;{&amp;#xA;  XDocument xmlDoc = new XDocument(&amp;#xA;      new XElement(&amp;#xA;          &amp;quot;File&amp;quot;,&amp;#xA;           new XElement(&amp;#xA;               &amp;quot;BAQ_details&amp;quot;,&amp;#xA;               new XElement(&amp;#xA;                   &amp;quot;Details&amp;quot;,&amp;#xA;               new XElement(&amp;#xA;                   &amp;quot;Company&amp;quot;,&amp;#xA;                    row.Field&amp;lt;string&amp;gt;(&amp;quot;Company&amp;quot;)),&amp;#xA;               new XElement(&amp;#xA;                   &amp;quot;QueryID&amp;quot;,&amp;#xA;                    row.Field&amp;lt;string&amp;gt;(&amp;quot;QueryID&amp;quot;)),&amp;#xA;               new XElement(&amp;#xA;                   &amp;quot;AuthorID&amp;quot;,&amp;#xA;                    row.Field&amp;lt;string&amp;gt;(&amp;quot;AuthorID&amp;quot;)),&amp;#xA;               new XElement(&amp;#xA;                   &amp;quot;Description&amp;quot;,&amp;#xA;                    row.Field&amp;lt;string&amp;gt;(&amp;quot;Description&amp;quot;)),&amp;#xA;               new XElement(&amp;#xA;                   &amp;quot;DisplayPhrase&amp;quot;,&amp;#xA;                    row.Field&amp;lt;string&amp;gt;(&amp;quot;DisplayPhrase&amp;quot;)),&amp;#xA;               new XElement(&amp;#xA;                   &amp;quot;IsGlobal&amp;quot;,&amp;#xA;                    row.Field&amp;lt;string&amp;gt;(&amp;quot;IsGlobal&amp;quot;)),&amp;#xA;               new XElement(&amp;#xA;                   &amp;quot;IsShared&amp;quot;,&amp;#xA;                    row.Field&amp;lt;string&amp;gt;(&amp;quot;IsShared&amp;quot;)),&amp;#xA;               new XElement(&amp;#xA;                   &amp;quot;Updatable&amp;quot;,&amp;#xA;                    row.Field&amp;lt;string&amp;gt;(&amp;quot;Updatable&amp;quot;)),&amp;#xA;               new XElement(&amp;#xA;                   &amp;quot;SysRevID&amp;quot;,&amp;#xA;                    row.Field&amp;lt;string&amp;gt;(&amp;quot;SysRevID&amp;quot;)),&amp;#xA;               new XElement(&amp;#xA;                   &amp;quot;SysRowID&amp;quot;,&amp;#xA;                    row.Field&amp;lt;string&amp;gt;(&amp;quot;SysRowID&amp;quot;))&amp;#xA;                    ))));&amp;#xA;                    string a = &amp;quot;This is th updated version&amp;quot;;&amp;#xA;                    GitHubFileAccess.Class1.CreateFileAsync(xmlDoc.Document.ToString(),v.QueryID.ToString(),&amp;quot;EpicorBAQ&amp;quot;,$&amp;quot;BAQ - {v.QueryID} / {v.Description } Updated Sucessfully{DateTime.Now}&amp;quot;);&amp;#xA;                 /*   string path = @&amp;quot;D:\Websites\EpicorERP10_DEV\Server\BAQLog.txt&amp;quot;;&amp;#xA;        // This text is added only once to the file.&amp;#xA;        if (!File.Exists(path))&amp;#xA;        {&amp;#xA;            // Create a file to write to.&amp;#xA;            using (StreamWriter sw = File.CreateText(path))&amp;#xA;            {&amp;#xA;                sw.WriteLine(&amp;quot;----------------------------------------------------&amp;quot;);&amp;#xA;                if(v.RowMod == &amp;quot;A&amp;quot;)&amp;#xA;                sw.WriteLine($&amp;quot;New BAQ {v.QueryID.ToString()} / {v.Description} is created by {Session.UserID} on {DateTime.Now}&amp;quot;);&amp;#xA;                else&amp;#xA;                sw.WriteLine($&amp;quot;Exisitng BAQ {v.QueryID.ToString()} / {v.Description} is Updated by {Session.UserID} on {DateTime.Now}&amp;quot;);&amp;#xA;                sw.WriteLine(&amp;quot;----------------------------------------------------&amp;quot;);&amp;#xA;                sw.WriteLine(&amp;quot; &amp;quot;);&amp;#xA;            }  &amp;#xA;        }&amp;#xA;&amp;#xA;        // This text is always added, making the file longer over time&amp;#xA;        // if it is not deleted.&amp;#xA;        using (StreamWriter sw = File.AppendText(path))&amp;#xA;        {&amp;#xA;                sw.WriteLine(&amp;quot;----------------------------------------------------&amp;quot;);&amp;#xA;                if(v.RowMod == &amp;quot;A&amp;quot;)&amp;#xA;                sw.WriteLine($&amp;quot;New BAQ {v.QueryID.ToString()} / {v.Description} is created by {Session.UserID} on {DateTime.Now}&amp;quot;);&amp;#xA;                else&amp;#xA;                sw.WriteLine($&amp;quot;Exisitng BAQ {v.QueryID.ToString()} / {v.Description} is Updated by {Session.UserID} on {DateTime.Now}&amp;quot;);&amp;#xA;                sw.WriteLine(&amp;quot;----------------------------------------------------&amp;quot;);&amp;#xA;                sw.WriteLine(&amp;quot; &amp;quot;);&amp;#xA;        }  */&amp;#xA;                    // InfoMessage.Publish(xmlDoc.Document.ToString());&amp;#xA;  //xmlDoc.Save(Server.MapPath(row.Field&amp;lt;string&amp;gt;(&amp;quot;Name&amp;quot;)) + &amp;quot;.xml&amp;quot;);&amp;#xA;}&amp;#xA;}" ExecutionRule="OnceForAllMatching" Id="0" IsAsync="False" RecordMode="Nothing" TerminateOnError="False" ValidationState="Valid" /&gt;&lt;/DirectiveStep.Action&gt;&lt;DirectiveStep.VisualProperties&gt;&lt;p:VisualPropertiesStorage&gt;&lt;x:Double x:Key="ElementX"&gt;173&lt;/x:Double&gt;&lt;x:Double x:Key="ElementY"&gt;178&lt;/x:Double&gt;&lt;iubd:TextNote Text="{x:Null}" x:Key="Note" Background="Yellow" IsExpanded="False" IsNotifying="True" X="0" Y="0" /&gt;&lt;/p:VisualPropertiesStorage&gt;&lt;/DirectiveStep.VisualProperties&gt;&lt;/DirectiveStep&gt;&lt;/DirectiveDefinition.StartNode&gt;&lt;DirectiveDefinition.Variables&gt;&lt;scg:List x:TypeArguments="DirectiveVariable" Capacity="0" /&gt;&lt;/DirectiveDefinition.Variables&gt;&lt;DirectiveDefinition.VisualProperties&gt;&lt;p:VisualPropertiesStorage&gt;&lt;x:Int32 x:Key="Ice.UI.Bpm.Designer.Plugins.NotificationViewModelInstanceCounter"&gt;0&lt;/x:Int32&gt;&lt;x:Int32 x:Key="Ice.UI.Bpm.Designer.Plugins.BAMAutoPrintViewModelInstanceCounter"&gt;0&lt;/x:Int32&gt;&lt;x:Int32 x:Key="Ice.UI.Bpm.Designer.Plugins.AttachDataTagViewModelInstanceCounter"&gt;0&lt;/x:Int32&gt;&lt;x:Int32 x:Key="Ice.UI.Bpm.Designer.Plugins.CallScWorkflowViewModelInstanceCounter"&gt;0&lt;/x:Int32&gt;&lt;x:Int32 x:Key="Ice.UI.Bpm.Designer.Plugins.ConditionViewModelInstanceCounter"&gt;0&lt;/x:Int32&gt;&lt;x:Int32 x:Key="Ice.UI.Bpm.Designer.Plugins.CustomCodeActionViewModelInstanceCounter"&gt;0&lt;/x:Int32&gt;&lt;x:Int32 x:Key="Ice.UI.Bpm.Designer.Plugins.InvokeNetMethodViewModelInstanceCounter"&gt;0&lt;/x:Int32&gt;&lt;x:Int32 x:Key="Ice.UI.Bpm.Designer.Plugins.RemoveDataTagViewModelInstanceCounter"&gt;0&lt;/x:Int32&gt;&lt;x:Int32 x:Key="Ice.UI.Bpm.Designer.Plugins.SendMailViewModelInstanceCounter"&gt;0&lt;/x:Int32&gt;&lt;x:Int32 x:Key="Ice.UI.Bpm.Designer.Plugins.SetArgumentViewModelInstanceCounter"&gt;0&lt;/x:Int32&gt;&lt;x:Int32 x:Key="Ice.UI.Bpm.Designer.Plugins.SetBpmDataFieldViewModelInstanceCounter"&gt;0&lt;/x:Int32&gt;&lt;x:Boolean x:Key="ExtensionTablesAllowed"&gt;False&lt;/x:Boolean&gt;&lt;x:Double x:Key="ElementX"&gt;10&lt;/x:Double&gt;&lt;x:Double x:Key="ElementY"&gt;10&lt;/x:Double&gt;&lt;iubd:TextNote Text="{x:Null}" x:Key="Note" Background="Yellow" IsExpanded="False" IsNotifying="True" X="0" Y="0" /&gt;&lt;iubd:LinkProperties x:Key="ExitLink" DestinationConnectorId="1" SourceConnectorId="4"&gt;&lt;iubd:LinkProperties.Points&gt;&lt;cm:BindableCollection x:TypeArguments="av:Point" IsNotifying="True"&gt;&lt;av:Point&gt;70,100&lt;/av:Point&gt;&lt;av:Point&gt;233,178&lt;/av:Point&gt;&lt;/cm:BindableCollection&gt;&lt;/iubd:LinkProperties.Points&gt;&lt;/iubd:LinkProperties&gt;&lt;/p:VisualPropertiesStorage&gt;&lt;/DirectiveDefinition.VisualProperties&gt;&lt;/DirectiveDefinition&gt;</Body>
      <Thumbnail></Thumbnail>
      <SysRevID>System.Byte[]</SysRevID>
      <SysRowID>275b5f6c-f5e3-4581-8758-feadd06c7687</SysRowID>
    </Details>
  </BPM_details>
</File>