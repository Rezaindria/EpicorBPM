<File>
  <BPM_details>
    <Details>
      <DirectiveID>3ceed48d-7ae0-45ab-a6ae-42c78067bbe4</DirectiveID>
      <Source>DB</Source>
      <BpMethodCode>Ice.BpDirective.Update</BpMethodCode>
      <Name>1</Name>
      <Order>10</Order>
      <IsEnabled>True</IsEnabled>
      <ReenterMax>1000</ReenterMax>
      <PreventDeadloops>False</PreventDeadloops>
      <VisibilityScope>0</VisibilityScope>
      <Company>EPIC03</Company>
      <DirectiveGroup></DirectiveGroup>
      <IsUpToDate>True</IsUpToDate>
      <CGCCode />
      <Body>&lt;?xml version="1.0" encoding="utf-16"?&gt;&lt;DirectiveDefinition mc:Ignorable="p" AdditionalUsings="using System.Xml.Linq;&amp;#xA;using System.IO;&amp;#xA;using System.Text;" Version="114" xmlns="clr-namespace:Ice.Lib.Bpm.Model;assembly=Ice.Lib.Bpm.Shared" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cm="clr-namespace:Caliburn.Micro;assembly=Caliburn.Micro" xmlns:icbb="clr-namespace:Ice.Contracts.BO.BpMethod;assembly=Ice.Contracts.BO.BpMethod" xmlns:ilbma="clr-namespace:Ice.Lib.Bpm.Model.Actions;assembly=Ice.Lib.Bpm.Shared" xmlns:iubd="clr-namespace:Ice.UI.Bpm.Designer;assembly=Ice.UI.Bpm.Core" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:p="http://epicor.com/BpmDesigner/Ignorable" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;&lt;DirectiveDefinition.AdditionalReferences&gt;&lt;scg:List x:TypeArguments="icbb:ReferencesGroup" Capacity="4"&gt;&lt;icbb:ReferencesGroup IsEditable="True" IsStandard="False" Name="Assemblies"&gt;&lt;icbb:ReferencesGroup.References&gt;&lt;scg:Dictionary x:TypeArguments="x:String, icbb:ReferenceInfo" /&gt;&lt;/icbb:ReferencesGroup.References&gt;&lt;/icbb:ReferencesGroup&gt;&lt;icbb:ReferencesGroup IsEditable="True" IsStandard="False" Name="Externals"&gt;&lt;icbb:ReferencesGroup.References&gt;&lt;icbb:ReferenceInfo x:Key="GitHubFileAccess" FileName="GitHubFileAccess.dll" Name="GitHubFileAccess" Version="1.0.0.2" /&gt;&lt;icbb:ReferenceInfo x:Key="Octokit" FileName="Octokit.dll" Name="Octokit" Version="0.50.0.0" /&gt;&lt;/icbb:ReferencesGroup.References&gt;&lt;/icbb:ReferencesGroup&gt;&lt;/scg:List&gt;&lt;/DirectiveDefinition.AdditionalReferences&gt;&lt;DirectiveDefinition.Nodes&gt;&lt;x:Reference&gt;__ReferenceID0&lt;/x:Reference&gt;&lt;/DirectiveDefinition.Nodes&gt;&lt;DirectiveDefinition.StartNode&gt;&lt;DirectiveStep Next="{x:Null}" x:Name="__ReferenceID0" DisplayName="Execute Custom Code 0" Id="8df815b1-48f3-460d-adfd-c3aeec5a723e"&gt;&lt;DirectiveStep.Action&gt;&lt;ilbma:CustomCodeAction PrimaryTable="{x:Null}" Code="var v = ttBpDirective.Where(x=&amp;gt; x.RowMod==&amp;quot;A&amp;quot; || x.RowMod == &amp;quot;U&amp;quot;).FirstOrDefault();&amp;#xD;&amp;#xA;if( v!= null &amp;amp;&amp;amp; v.DirectiveGroup != &amp;quot;GitHub&amp;quot;)&amp;#xD;&amp;#xA;{&amp;#xD;&amp;#xA;  DataTable dtBpm = new DataTable();&amp;#xD;&amp;#xA;  dtBpm.Columns.Add(&amp;quot;DirectiveID&amp;quot;);&amp;#xD;&amp;#xA;  dtBpm.Columns.Add(&amp;quot;Source&amp;quot;);&amp;#xD;&amp;#xA;  dtBpm.Columns.Add(&amp;quot;BpMethodCode&amp;quot;);&amp;#xD;&amp;#xA;  dtBpm.Columns.Add(&amp;quot;Name&amp;quot;);&amp;#xD;&amp;#xA;  dtBpm.Columns.Add(&amp;quot;Order&amp;quot;);&amp;#xD;&amp;#xA;  dtBpm.Columns.Add(&amp;quot;IsEnabled&amp;quot;);&amp;#xD;&amp;#xA;  dtBpm.Columns.Add(&amp;quot;ReenterMax&amp;quot;);&amp;#xD;&amp;#xA;  dtBpm.Columns.Add(&amp;quot;PreventDeadloops&amp;quot;);&amp;#xD;&amp;#xA;  dtBpm.Columns.Add(&amp;quot;VisibilityScope&amp;quot;);&amp;#xD;&amp;#xA;  dtBpm.Columns.Add(&amp;quot;Company&amp;quot;);&amp;#xD;&amp;#xA;  dtBpm.Columns.Add(&amp;quot;DirectiveGroup&amp;quot;);&amp;#xD;&amp;#xA;  dtBpm.Columns.Add(&amp;quot;IsUpToDate&amp;quot;);&amp;#xD;&amp;#xA;  dtBpm.Columns.Add(&amp;quot;CGCCode&amp;quot;);&amp;#xD;&amp;#xA;  dtBpm.Columns.Add(&amp;quot;Body&amp;quot;);&amp;#xD;&amp;#xA;  dtBpm.Columns.Add(&amp;quot;Thumbnail&amp;quot;);&amp;#xD;&amp;#xA;  dtBpm.Columns.Add(&amp;quot;SysRevID&amp;quot;);&amp;#xD;&amp;#xA;   dtBpm.Columns.Add(&amp;quot;SysRowID&amp;quot;);&amp;#xD;&amp;#xA;  dtBpm.Rows.Add(v.DirectiveID,v.Source,v.BpMethodCode,v.Name,v.Order,v.IsEnabled,v.ReenterMax,v.PreventDeadloops,v.VisibilityScope,v.Company,v.DirectiveGroup,v.IsUpToDate,v.CGCCode,v.Body,v.Thumbnail,v.SysRevID,v.SysRowID);&amp;#xD;&amp;#xA;  &amp;#xD;&amp;#xA;foreach(DataRow row in dtBpm.Rows)&amp;#xD;&amp;#xA;{&amp;#xD;&amp;#xA;  XDocument xmlDoc = new XDocument(&amp;#xD;&amp;#xA;      new XElement(&amp;#xD;&amp;#xA;          &amp;quot;File&amp;quot;,&amp;#xD;&amp;#xA;           new XElement(&amp;#xD;&amp;#xA;               &amp;quot;BPM_details&amp;quot;,&amp;#xD;&amp;#xA;               new XElement(&amp;#xD;&amp;#xA;                   &amp;quot;Details&amp;quot;,&amp;#xD;&amp;#xA;               new XElement(&amp;#xD;&amp;#xA;                   &amp;quot;DirectiveID&amp;quot;,&amp;#xD;&amp;#xA;                    row.Field&amp;lt;string&amp;gt;(&amp;quot;DirectiveID&amp;quot;)),&amp;#xD;&amp;#xA;               new XElement(&amp;#xD;&amp;#xA;                   &amp;quot;Source&amp;quot;,&amp;#xD;&amp;#xA;                    row.Field&amp;lt;string&amp;gt;(&amp;quot;Source&amp;quot;)),&amp;#xD;&amp;#xA;               new XElement(&amp;#xD;&amp;#xA;                   &amp;quot;BpMethodCode&amp;quot;,&amp;#xD;&amp;#xA;                    row.Field&amp;lt;string&amp;gt;(&amp;quot;BpMethodCode&amp;quot;)),&amp;#xD;&amp;#xA;               new XElement(&amp;#xD;&amp;#xA;                   &amp;quot;Name&amp;quot;,&amp;#xD;&amp;#xA;                    row.Field&amp;lt;string&amp;gt;(&amp;quot;Name&amp;quot;)),&amp;#xD;&amp;#xA;               new XElement(&amp;#xD;&amp;#xA;                   &amp;quot;Order&amp;quot;,&amp;#xD;&amp;#xA;                    row.Field&amp;lt;string&amp;gt;(&amp;quot;Order&amp;quot;)),&amp;#xD;&amp;#xA;               new XElement(&amp;#xD;&amp;#xA;                   &amp;quot;IsEnabled&amp;quot;,&amp;#xD;&amp;#xA;                    row.Field&amp;lt;string&amp;gt;(&amp;quot;IsEnabled&amp;quot;)),&amp;#xD;&amp;#xA;               new XElement(&amp;#xD;&amp;#xA;                   &amp;quot;ReenterMax&amp;quot;,&amp;#xD;&amp;#xA;                    row.Field&amp;lt;string&amp;gt;(&amp;quot;ReenterMax&amp;quot;)),&amp;#xD;&amp;#xA;               new XElement(&amp;#xD;&amp;#xA;                   &amp;quot;PreventDeadloops&amp;quot;,&amp;#xD;&amp;#xA;                    row.Field&amp;lt;string&amp;gt;(&amp;quot;PreventDeadloops&amp;quot;)),&amp;#xD;&amp;#xA;               new XElement(&amp;#xD;&amp;#xA;                   &amp;quot;VisibilityScope&amp;quot;,&amp;#xD;&amp;#xA;                    row.Field&amp;lt;string&amp;gt;(&amp;quot;VisibilityScope&amp;quot;)),&amp;#xD;&amp;#xA;               new XElement(&amp;#xD;&amp;#xA;                   &amp;quot;Company&amp;quot;,&amp;#xD;&amp;#xA;                    row.Field&amp;lt;string&amp;gt;(&amp;quot;Company&amp;quot;)),&amp;#xD;&amp;#xA;               new XElement(&amp;#xD;&amp;#xA;                   &amp;quot;DirectiveGroup&amp;quot;,&amp;#xD;&amp;#xA;                    row.Field&amp;lt;string&amp;gt;(&amp;quot;DirectiveGroup&amp;quot;)),&amp;#xD;&amp;#xA;               new XElement(&amp;#xD;&amp;#xA;                   &amp;quot;IsUpToDate&amp;quot;,&amp;#xD;&amp;#xA;                    row.Field&amp;lt;string&amp;gt;(&amp;quot;IsUpToDate&amp;quot;)),&amp;#xD;&amp;#xA;               new XElement(&amp;#xD;&amp;#xA;                   &amp;quot;CGCCode&amp;quot;,&amp;#xD;&amp;#xA;                    row.Field&amp;lt;string&amp;gt;(&amp;quot;CGCCode&amp;quot;)),&amp;#xD;&amp;#xA;               new XElement(&amp;#xD;&amp;#xA;                   &amp;quot;Body&amp;quot;,&amp;#xD;&amp;#xA;                    row.Field&amp;lt;string&amp;gt;(&amp;quot;Body&amp;quot;)),&amp;#xD;&amp;#xA;               new XElement(&amp;#xD;&amp;#xA;                   &amp;quot;Thumbnail&amp;quot;,&amp;#xD;&amp;#xA;                    row.Field&amp;lt;string&amp;gt;(&amp;quot;Thumbnail&amp;quot;)),&amp;#xD;&amp;#xA;               new XElement(&amp;#xD;&amp;#xA;                   &amp;quot;SysRevID&amp;quot;,&amp;#xD;&amp;#xA;                    row.Field&amp;lt;string&amp;gt;(&amp;quot;SysRevID&amp;quot;)),&amp;#xD;&amp;#xA;               new XElement(&amp;#xD;&amp;#xA;                   &amp;quot;SysRowID&amp;quot;,&amp;#xD;&amp;#xA;                    row.Field&amp;lt;string&amp;gt;(&amp;quot;SysRowID&amp;quot;))&amp;#xD;&amp;#xA;                    ))));&amp;#xD;&amp;#xA;                    GitHubFileAccess.Class1.CreateFileAsync(xmlDoc.Document.ToString(),v.DirectiveID.ToString(),&amp;quot;EpicorBPM&amp;quot;,$&amp;quot;BPM - {v.BpMethodCode} / {v.Name } Updated Sucessfully{DateTime.Now}&amp;quot;);&amp;#xD;&amp;#xA;                 /*   string path = @&amp;quot;D:\Websites\EpicorERP10_DEV\Server\BPMLog.txt&amp;quot;;&amp;#xD;&amp;#xA;        // This text is added only once to the file.&amp;#xD;&amp;#xA;        if (!File.Exists(path))&amp;#xD;&amp;#xA;        {&amp;#xD;&amp;#xA;            // Create a file to write to.&amp;#xD;&amp;#xA;            using (StreamWriter sw = File.CreateText(path))&amp;#xD;&amp;#xA;            {&amp;#xD;&amp;#xA;                sw.WriteLine(&amp;quot;----------------------------------------------------&amp;quot;);&amp;#xD;&amp;#xA;                if(v.RowMod == &amp;quot;A&amp;quot;)&amp;#xD;&amp;#xA;                sw.WriteLine($&amp;quot;New BPM {v.BpMethodCode} / {v.Name} is created by {Session.UserID} on {DateTime.Now}&amp;quot;);&amp;#xD;&amp;#xA;                else&amp;#xD;&amp;#xA;                sw.WriteLine($&amp;quot;Exisitng BPM {v.BpMethodCode} / {v.Name} is Updated by {Session.UserID} on {DateTime.Now}&amp;quot;);&amp;#xD;&amp;#xA;                sw.WriteLine(&amp;quot;----------------------------------------------------&amp;quot;);&amp;#xD;&amp;#xA;                sw.WriteLine(&amp;quot; &amp;quot;);&amp;#xD;&amp;#xA;            }  &amp;#xD;&amp;#xA;        }&amp;#xD;&amp;#xA;&amp;#xD;&amp;#xA;        // This text is always added, making the file longer over time&amp;#xD;&amp;#xA;        // if it is not deleted.&amp;#xD;&amp;#xA;        using (StreamWriter sw = File.AppendText(path))&amp;#xD;&amp;#xA;        {&amp;#xD;&amp;#xA;                sw.WriteLine(&amp;quot;----------------------------------------------------&amp;quot;);&amp;#xD;&amp;#xA;                if(v.RowMod == &amp;quot;A&amp;quot;)&amp;#xD;&amp;#xA;                sw.WriteLine($&amp;quot;New BPM {v.BpMethodCode} / {v.Name} is created by {Session.UserID} on {DateTime.Now}&amp;quot;);&amp;#xD;&amp;#xA;                else&amp;#xD;&amp;#xA;                sw.WriteLine($&amp;quot;Exisitng BPM {v.BpMethodCode} / {v.Name} is Updated by {Session.UserID} on {DateTime.Now}&amp;quot;);&amp;#xD;&amp;#xA;                sw.WriteLine(&amp;quot;----------------------------------------------------&amp;quot;);&amp;#xD;&amp;#xA;                sw.WriteLine(&amp;quot; &amp;quot;);&amp;#xD;&amp;#xA;        }  */&amp;#xD;&amp;#xA;                     InfoMessage.Publish(xmlDoc.Document.ToString());&amp;#xD;&amp;#xA;  //xmlDoc.Save(Server.MapPath(row.Field&amp;lt;string&amp;gt;(&amp;quot;Name&amp;quot;)) + &amp;quot;.xml&amp;quot;);&amp;#xD;&amp;#xA;}&amp;#xD;&amp;#xA;}" ExecutionRule="OnceForAllMatching" Id="0" IsAsync="False" RecordMode="Nothing" TerminateOnError="False" ValidationState="Valid" /&gt;&lt;/DirectiveStep.Action&gt;&lt;DirectiveStep.VisualProperties&gt;&lt;p:VisualPropertiesStorage&gt;&lt;x:Double x:Key="ElementX"&gt;123&lt;/x:Double&gt;&lt;x:Double x:Key="ElementY"&gt;128&lt;/x:Double&gt;&lt;iubd:TextNote Text="{x:Null}" x:Key="Note" Background="Yellow" IsExpanded="False" IsNotifying="True" X="0" Y="0" /&gt;&lt;/p:VisualPropertiesStorage&gt;&lt;/DirectiveStep.VisualProperties&gt;&lt;/DirectiveStep&gt;&lt;/DirectiveDefinition.StartNode&gt;&lt;DirectiveDefinition.Variables&gt;&lt;scg:List x:TypeArguments="DirectiveVariable" Capacity="0" /&gt;&lt;/DirectiveDefinition.Variables&gt;&lt;DirectiveDefinition.VisualProperties&gt;&lt;p:VisualPropertiesStorage&gt;&lt;x:Int32 x:Key="Ice.UI.Bpm.Designer.Plugins.NotificationViewModelInstanceCounter"&gt;0&lt;/x:Int32&gt;&lt;x:Int32 x:Key="Ice.UI.Bpm.Designer.Plugins.BAMAutoPrintViewModelInstanceCounter"&gt;0&lt;/x:Int32&gt;&lt;x:Int32 x:Key="Ice.UI.Bpm.Designer.Plugins.AttachDataTagViewModelInstanceCounter"&gt;0&lt;/x:Int32&gt;&lt;x:Int32 x:Key="Ice.UI.Bpm.Designer.Plugins.CallScWorkflowViewModelInstanceCounter"&gt;0&lt;/x:Int32&gt;&lt;x:Int32 x:Key="Ice.UI.Bpm.Designer.Plugins.ConditionViewModelInstanceCounter"&gt;0&lt;/x:Int32&gt;&lt;x:Int32 x:Key="Ice.UI.Bpm.Designer.Plugins.CustomCodeActionViewModelInstanceCounter"&gt;1&lt;/x:Int32&gt;&lt;x:Int32 x:Key="Ice.UI.Bpm.Designer.Plugins.InvokeNetMethodViewModelInstanceCounter"&gt;0&lt;/x:Int32&gt;&lt;x:Int32 x:Key="Ice.UI.Bpm.Designer.Plugins.RemoveDataTagViewModelInstanceCounter"&gt;0&lt;/x:Int32&gt;&lt;x:Int32 x:Key="Ice.UI.Bpm.Designer.Plugins.SendMailViewModelInstanceCounter"&gt;0&lt;/x:Int32&gt;&lt;x:Int32 x:Key="Ice.UI.Bpm.Designer.Plugins.SetArgumentViewModelInstanceCounter"&gt;0&lt;/x:Int32&gt;&lt;x:Int32 x:Key="Ice.UI.Bpm.Designer.Plugins.SetBpmDataFieldViewModelInstanceCounter"&gt;0&lt;/x:Int32&gt;&lt;x:Boolean x:Key="ExtensionTablesAllowed"&gt;False&lt;/x:Boolean&gt;&lt;x:Double x:Key="ElementX"&gt;10&lt;/x:Double&gt;&lt;x:Double x:Key="ElementY"&gt;10&lt;/x:Double&gt;&lt;iubd:TextNote Text="{x:Null}" x:Key="Note" Background="Yellow" IsExpanded="False" IsNotifying="True" X="0" Y="0" /&gt;&lt;iubd:LinkProperties x:Key="ExitLink" DestinationConnectorId="1" SourceConnectorId="4"&gt;&lt;iubd:LinkProperties.Points&gt;&lt;cm:BindableCollection x:TypeArguments="av:Point" IsNotifying="True"&gt;&lt;av:Point&gt;70,100&lt;/av:Point&gt;&lt;av:Point&gt;183,128&lt;/av:Point&gt;&lt;/cm:BindableCollection&gt;&lt;/iubd:LinkProperties.Points&gt;&lt;/iubd:LinkProperties&gt;&lt;/p:VisualPropertiesStorage&gt;&lt;/DirectiveDefinition.VisualProperties&gt;&lt;/DirectiveDefinition&gt;</Body>
      <Thumbnail></Thumbnail>
      <SysRevID>System.Byte[]</SysRevID>
      <SysRowID>a5cbecc1-1da6-49f9-88eb-5680bf787886</SysRowID>
    </Details>
  </BPM_details>
</File>